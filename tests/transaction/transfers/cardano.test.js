const nock = require('nock')
const chai = require('chai')
var chaiAsPromised = require('chai-as-promised')
chai.use(chaiAsPromised)
const assert = chai.assert
const AxiosApi = require('../../../src/axios')
const TransactionController = require('../../../src/features/transaction/controller')
const { Protocol } = require('../../../src/services/blockchain/constants')
const { getWallets, config } = require('../../wallet/constants')
const txController = new TransactionController(config)
const axiosApi = new AxiosApi(config)
const baseUrl = axiosApi.getBaseUrl(config.environment)
let wallets = {}

describe.only('Cardano transfer transactions', () => {
  before(async () => {
    wallets = await getWallets()

    nock(baseUrl)
      .get(`/transaction/utxo/${wallets.cardano.address}`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, [
        {
          "txHash": "03d34c3fe22e0fee40abb3a41fb4b0cc37330fec4c7fe1e443cdd53fed92f79d",
          "index": 2,
          "token": "ADA",
          "value": 10
        },
        {
          "txHash": "03d34c3fe22e0fee40abb3a41fb4b0cc37330fec4c7fe1e443cdd53fed92f79d",
          "index": 3,
          "token": "ADA",
          "value": 852.691124,
          "metadata": {
            "03d34c3fe22e0fee40abb3a41fb4b0cc37330fec4c7fe1e443cdd53fed92f79d:3": [
              {
                "policyId": "f3eb9d86dfabc6f396815607e75cf398b64a3f40f50e8398baa5f4a1",
                "tokens": [
                  {
                    "value": "19980",
                    "currency": {
                      "symbol": "54657374746f6b656e",
                      "decimals": 0,
                      "metadata": {
                        "policyId": "f3eb9d86dfabc6f396815607e75cf398b64a3f40f50e8398baa5f4a1"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ])

    nock(baseUrl)
      .post(`/transaction/preprocess`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, {
        "options": {
          "relative_ttl": 1000,
          "transaction_size": 367
        }
      })

    nock(baseUrl)
      .post(`/transaction/metadata`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, {
        "metadata": {
          "ttl": "41753738"
        },
        "suggested_fee": [
          {
            "value": "171705",
            "currency": {
              "symbol": "ADA",
              "decimals": 6
            }
          }
        ]
      })

    nock(baseUrl)
      .post(`/transaction/payload`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, {
        "unsigned_transaction": "827902126134303038323832353832303033643334633366653232653066656534306162623361343166623462306363333733333066656334633766653165343433636464353366656439326637396430323832353832303033643334633366653232653066656534306162623361343166623462306363333733333066656334633766653165343433636464353366656439326637396430333031383238323538333930303535306264383237653739323930323961376333663039633762383163336137626666633739626235313838636661666161396632366237313461623331306239613937373264336564303435383830353337303364613337616235626230636533353631663133343031393830326431613030393839363830383235383339303033633631623535646330633833656132643330336137303430336264643936653630326131383465333937393733393130656164626338353036316138633832353738333932636531376131326633363839363037353135623664346431306334376633653765393534386439343034383231613332643036396662613135383163663365623964383664666162633666333936383135363037653735636633393862363461336634306635306538333938626161356634613161313439353436353733373437343666366236353665313934653063303231613030303239656239303331613032376431633861a16a6f7065726174696f6e7380",
        "payloads": [
          {
            "account_identifier": {
              "address": "addr_test1qq7xrd2acryragknqwnsgqaam9hxq2scfcuhjuu3p6kmepgxr2xgy4urjt8p0gf0x6ykqag4km2dzrz870n7j4ydjszqj93ujx"
            },
            "hex_bytes": "75cdc43ca6ad5fb53e28ba8312201d67e4d4b55b55b99f100d1337d36c110963",
            "signature_type": "ed25519"
          }
        ]
      })

    nock(baseUrl)
      .post(`/transaction/combine`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, {
        "signed_transaction": "827902ea16a6f7065726174696f6e7380"
      })

    // UTXO

    nock(baseUrl)
      .get(`/transaction/utxo/addr_test1qp2shkp8u7ffq2d8c0cfc7upcwnmllrehdgc3na0420jddc54vcshx5hwtf76pzcspfhq0dr026mkr8r2c03xsqesqkscfvczj`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, [
        {
          "txHash": "03d34c3fe22e0fee40abb3a41fb4b0cc37330fec4c7fe1e443cdd53fed92f79d",
          "index": 2,
          "token": "ADA",
          "value": 10
        },
        {
          "txHash": "03d34c3fe22e0fee40abb3a41fb4b0cc37330fec4c7fe1e443cdd53fed92f79d",
          "index": 3,
          "token": "ADA",
          "value": 852.691124,
          "metadata": {
            "03d34c3fe22e0fee40abb3a41fb4b0cc37330fec4c7fe1e443cdd53fed92f79d:3": [
              {
                "policyId": "f3eb9d86dfabc6f396815607e75cf398b64a3f40f50e8398baa5f4a1",
                "tokens": [
                  {
                    "value": "19980",
                    "currency": {
                      "symbol": "54657374746f6b656e",
                      "decimals": 0,
                      "metadata": {
                        "policyId": "f3eb9d86dfabc6f396815607e75cf398b64a3f40f50e8398baa5f4a1"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ])

    nock(baseUrl)
      .post(`/transaction/preprocess`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, {
        "options": {
          "relative_ttl": 1000,
          "transaction_size": 220
        }
      })

    nock(baseUrl)
      .post(`/transaction/metadata`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, {
        "metadata": {
          "ttl": "41755558"
        },
        "suggested_fee": [
          {
            "value": "165237",
            "currency": {
              "symbol": "ADA",
              "decimals": 6
            }
          }
        ]
      })

    nock(baseUrl)
      .post(`/transaction/payload`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, {
        "unsigned_transaction": "8278ec6134303038313832353832303033643334633366653232653066656534306162623361343166623462306363333733333066656334633766653165343433636464353366656439326637396430323031383138323538333930303535306264383237653739323930323961376333663039633762383163336137626666633739626235313838636661666161396632366237313461623331306239613937373264336564303435383830353337303364613337616235626230636533353631663133343031393830326431613030393066353630303231613030303761313230303331613032376432336136a16a6f7065726174696f6e7380",
        "payloads": [
          {
            "account_identifier": {
              "address": "addr_test1qp2shkp8u7ffq2d8c0cfc7upcwnmllrehdgc3na0420jddc54vcshx5hwtf76pzcspfhq0dr026mkr8r2c03xsqesqkscfvczj"
            },
            "hex_bytes": "d2af7b2b49293d7296670f343e002f9cd36b46bcb6e004045f2367607a856f6f",
            "signature_type": "ed25519"
          }
        ]
      })

    nock(baseUrl)
      .post(`/transaction/combine`)
      .query({
        protocol: Protocol.CARDANO,
      })
      .reply(200, {
        "signed_transaction": "827901ca16a6f7065726174696f6e7380"
      })
  })
  after(() => {
    nock.isDone()
  })

  it('create ADA transfer from wallet', async () => {
    const transaction = await txController.createCardanoTransferTransactionFromWallet({
      wallet: wallets.cardano,
      outputs: [
        {
          address: "addr_test1qp2shkp8u7ffq2d8c0cfc7upcwnmllrehdgc3na0420jddc54vcshx5hwtf76pzcspfhq0dr026mkr8r2c03xsqesqkscfvczj",
          amount: "10"
        }
      ]
    })
    assert.strictEqual(
      transaction.signedTx,
      '827902ea16a6f7065726174696f6e7380'
    )
  })

  it('create ADA transfer from UTXO', async () => {
    const transaction = await txController.createCardanoTransferTransactionFromUTXO({
      inputs:
        [
          {
            address: "addr_test1qp2shkp8u7ffq2d8c0cfc7upcwnmllrehdgc3na0420jddc54vcshx5hwtf76pzcspfhq0dr026mkr8r2c03xsqesqkscfvczj", privateKey: "e86c6d0206f8b03b11eb1b342d55ba215917da2e6b23af30ab170ecd58d7255a3e63aa4d4b14f02fe36fd86fdd7f40e0d14b00cdc12d89c80eb55b236c4da5484825b5ff033d22b94981288e956e4e18b3266d7e01a6b261daf455d7e111b307f20f34358cda4390bebeee37c2b172dba88ae5c1ab47c9a2ed5871c10c30e176",
            txHash: "03d34c3fe22e0fee40abb3a41fb4b0cc37330fec4c7fe1e443cdd53fed92f79d", index: '2'
          }
        ],
      outputs: [
        {
          address: "addr_test1qp2shkp8u7ffq2d8c0cfc7upcwnmllrehdgc3na0420jddc54vcshx5hwtf76pzcspfhq0dr026mkr8r2c03xsqesqkscfvczj",
          amount: "9.5"
        }
      ]
    })
    assert.strictEqual(
      transaction.signedTx,
      '827901c038336134303038313832353832303033643334633366653232653066656534306162623361343166623462306363333733333066656334633766653165343433636464353366656439326637396430323031383138323538333930303535306264383237653739323930323961376333663039633762383163336137626666633739626235313838636661666161396632366237313461623331306239613937373264336564303435383830353337303364613337616235626230636533353631663133343031393830326431613030393066353630303231613030303761313230303331613032376432336136613130303831383235383230343832356235666630333364323262393439383132383865393536653465313862333236366437653031613662323631646166343535643765313131623330373538343036376431313966633065333335303337653066613061643862613235613835353865326666663536663366613531353636306463656231633335343433383037343938303161643934306331366531363735396138633963373662373966376536646163303437623063316362396565336664663163333232616436613130626636a16a6f7065726174696f6e7380'
    )
  })

})
